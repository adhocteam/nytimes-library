# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checking Repository
        uses: actions/checkout@v2

      # This is where the application is initially being built
      - name: 'Building Application'
        uses: actions/setup-node@v1
        with: 
           node-version: '12.x'
        env:
          # Google oAuth credentials
          google_client_id: ${{ secrets.GOOGLE_CLIENT_ID }} 
          google_client_secret: ${{ secrets.GOOGLE_CLIENT_SECRET }} 
          session_secret: ${{ secrets.SESSION_SECRET }} 
          google_application_json: ${{ secrets.GOOGLE_APPLICATION_JSON }} 
          google_application_credentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }} 
          gcp_project_id: ${{ secrets.GCP_PROJECT_ID }} 
          # comma separated list of approved access domains or email addresses (regex is supported).
          approved_domains: ${{ secrets.APPROVED_DOMAINS }} 
          # Google drive Configuration
          # team or folder ("folder" if using a folder instead of a team drive)
          drive_type: ${{ secrets.DRIVE_TYPE }} 
          # the ID of your team's drive or shared folder. The string of random numbers and letters at the end of your team drive or folder url.
          drive_id: ${{ secrets.DRIVE_ID }} 
      - run: npm ci
      - run: npm start

      # Runs a single command using the runners shell
      - name: 'Setup Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
        with:
          project_id: '${{ secrets.DEV_PROJECT_ID }}'
          service_account_key: '${{ secrets.DEV_GCP_SA_KEY }}'
      
      # Deploys the application to development
      - name: 'Deploy to App Engine'
        run: 'gcloud app deploy app.yaml --quiet --no-promote --version v1'